# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
    colorflag="--color"
else # OS X `ls`
    colorflag="-G"
fi

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd='ls -lF ${colorflag} | grep "^d"'

# `cat` with beautiful colors. requires Pygments installed.
#                              sudo easy_install Pygments
#                              sudo apt-get install python-pygments
alias c='pygmentize -O style=monokai -f console256 -g'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Gzip-enabled `curl`
alias gurl="curl --compressed"

# Update installed npm packages and Ruby gems
alias update='sudo npm update -g; sudo gem update'

# IP addresses
alias ipexternal="dig +short myip.opendns.com @resolver1.opendns.com"
function iplocal { netstat -n -t | awk '{print $4}' | grep -o '[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*' | grep -v '127.0.0.1' | sort -u; }

# Enhanced WHOIS lookups
alias whois="whois -h whois-servers.net"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    alias "$method"="lwp-request -m '$method'"
done

# SSH tunnel
alias tunnel='sshuttle --daemon --pidfile=/tmp/sshuttle.pid --remote vps --dns 0/0'
alias tunnelstop='[[ -f /tmp/sshuttle.pid ]] && kill `cat /tmp/sshuttle.pid`'

# Chrome for Android remote debugging
alias remotedb='adb forward tcp:9222 localabstract:chrome_devtools_remote && o http://localhost:9222/'


#
# Git Aliases
#

# Credit to @bronson
# https://github.com/bronson/dotfiles/blob/master/.bashrc#L94%3aL132
__define_git_completion () {
eval "
    _git_$2_shortcut () {
        COMP_LINE=\"git $2\${COMP_LINE#$1}\"
        let COMP_POINT+=$((4+${#2}-${#1}))
        COMP_WORDS=(git $2 \"\${COMP_WORDS[@]:1}\")
        let COMP_CWORD+=1

        local cur words cword prev
        _get_comp_words_by_ref -n =: cur words cword prev
        _git_$2
    }
"
}
__git_shortcut () {
    type _git_$2_shortcut &>/dev/null || __define_git_completion $1 $2
    local args=${@: 3}
    alias $1="git $2 $args"
    complete -o default -o nospace -F _git_$2_shortcut $1
}

__git_shortcut gitd     diff --ignore-space-change
__git_shortcut gitds    diff --ignore-space-change --staged
__git_shortcut gita     add
__git_shortcut gitl     log --oneline --decorate

alias gits="git status"

# git root
alias gitr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'

# Delete all merged branches locally and remotely
function gitprune() {
    local branches=$(git branch --merged | grep -v "\*")
    echo $branches | xargs -n 1 git branch --delete
    echo $branches | xargs -n 1 git push --delete origin
}

# Push the current branch to origin and track it
function gitpush() {
    local branch=$(git branch | grep "\*" | cut -c 3-)
    git push -u origin $branch
}

# Fetch a pull request to a local branch
function gitfetchpr() {
    git fetch origin pull/$1/head:$2
}

# Ignore changes on a tracked file
alias gitignore="git update-index --assume-unchanged"

# Stop ignoring changes on a tracked file
alias gitunignore="git update-index --no-assume-unchanged"

# List tracked files set to ignore changes
alias gitignored="git ls-files -v | grep '^[a-z]'"
